---
layout: post
title: "От Идеи до Релиза за 2 недели. Часть 3"
author: rem kim
date: 2019-12-02 22:55:00 -0400
categories: [blog, dev]
tags:
  [
    blog,
    netlify,
    serverless,
    netxtjs,
    firebase,
    faunadb,
    github,
    project,
    startup,
    idea,
    russian,
  ]
---

# От Идеи до Релиза за 2 недели. Часть 3

## День 5

После успешного сединения Firebase, я подумал. Я ведь пытался подключить FaunaDB GraphQL и оно не работало, что если попробовать использовать их JavaScript библиотеку и на вызывать самому запросы к базе данных. Что я собственно и сделал. Обернул запросы к базе данных с помощью своих GraphQL ресолверов и все получилось. Сделал вывод, что их GraphQL интеграция с Нетлифай еще не готова. Я не хотел останавливаться на этом переделал все под FaunaDB.

## День 6

### Дурацкий Netlify Identity

Началось все с неисправности. Netlify Identity барахлило. Тупо не логинило меня. Еще непонятки с их виджетом. По идее если библиотека подключена она атвоматически должна делать такие вещи как подтверждение регистрации по токену и так далее. Да и потом я глянул на прайс лист и если у меня будет 1000+ пользователей то первый уровень стоит 99 долларов за дальнейшие 5000 пользователей. Не долго думая я решил написать свою аутентификацию используя GraphQL и FaunaDB. В целом это не так тяжело. Я использовал jsonwebtokens для генерации логин токена и рефреш токена. Простая стратегия аутентификации. Даешь пользователю токен доступа которые живет максимум 15 минут и так же даешь пользователю токен обновления которые живет подольше, в моем случае 7 дней. С токеном обновления пользователь может получить новый токен доступа без повторной аутентификации. Легко и просто.

### Apollo GraphQL Merge Schemas

Далее хуже. В ходе аутентификации если пользователь неправильно написал пароль или почту я отправляю ошибку аутентификации назад. Все бы ничего, но так как я использую serverless lambda functions я подключил Gateway Schema Sticthing единый энд пойнт где все схемы GraphQL ресолверы и так далее соединяются в одно. Так вот там есть функция которая все воедино соединяет, она называется `mergeSchemas`. Так вот она глатает все ошибки и отправляет в ответ Серверную Ошибку. На данный момент проблема не решена и в интернете совсем нету информации, как это решить. Отправил запрос на Netlify Community может кто ответит, а пока я в страну снов ату совсем голова не варит!

### _Продолжение следует_
